{"version":3,"file":"static/js/133.08296a87.chunk.js","mappings":"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","sources":["Pages/Home/Home.styled.jsx","Pages/Home/Home.jsx","api/api.js","components/MoviesSection/MoviesSection.styled.jsx","components/MoviesSection/MoviesSection.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const StyledTrendingMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center; */\n  /* align-content: center; */\n`;\n\nexport const TrendingSectionHeaderH1 = styled.h1`\n  /* display: block; */\n  margin: 0px auto 30px;\n  color: inherit;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { getTrendingMovies } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { TrendingSectionHeaderH1, StyledTrendingMain } from './Home.styled';\nimport MoviesSection from 'components/MoviesSection/MoviesSection';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  // const getMovies = useCallback(async () => {\n  //   setTrendingMovies(await getTrendingMovies());\n  // }, []);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      setTrendingMovies(await getTrendingMovies());\n    };\n    getMovies();\n  }, []);\n\n  const handleScrollPosition = () => {\n    const scrollPosition = sessionStorage.getItem('scrollPosition');\n    if (scrollPosition) {\n      window.scrollTo(0, parseInt(scrollPosition));\n      sessionStorage.removeItem('scrollPosition');\n    }\n  };\n\n  useEffect(() => {\n    if (trendingMovies.length !== 0) {\n      handleScrollPosition();\n    }\n  }, [trendingMovies]);\n\n  return (\n    // console.log(location),\n    <StyledTrendingMain>\n      <TrendingSectionHeaderH1>\n        Trending movies of the week\n      </TrendingSectionHeaderH1>\n      <MoviesSection movies={trendingMovies} location={location} />\n    </StyledTrendingMain>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\nconst API_KEY = '2312830e6f848d2a7194ede59058ec48';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  //   timeout: 1000,\n});\n\nexport const getTrendingMovies = async () => {\n  let data;\n  try {\n    //   const trendingMovies = await api\n    await api.get(`/trending/movie/week?api_key=${API_KEY}`).then(response => {\n      // console.log(response.data.results);\n      data = response.data.results;\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByID = async id => {\n  let data;\n  try {\n    await api\n      .get(\n        `/movie/${id}?api_key=${API_KEY}&language=en-US&append_to_response=videos`\n      )\n      .then(response => {\n        data = response;\n      });\n    // console.log(data.data);\n    return data.data;\n  } catch (error) {\n    console.log(error);\n    return error.response.status;\n  }\n};\n\nexport const getMovieCast = async id => {\n  let data;\n  try {\n    await api\n      .get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n      .then(response => (data = response.data.cast));\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  let data;\n  try {\n    await api\n      .get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n      .then(response => {\n        data = response.data.results;\n      });\n    return data;\n    // console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovie = async query => {\n  let data;\n  try {\n    await api\n      .get(`/search/movie?api_key=${API_KEY}&${query}`)\n      .then(response => (data = response.data.results));\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const StyledMoviesSectionUl = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  text-align: center;\n  margin-bottom: 50px;\n`;\n\nexport const StyledMovieWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 300px;\n`;\n\nexport const StyledPosterWrapper = styled.div`\n  width: 300px;\n  height: 450px;\n  object-fit: cover;\n  /* overflow: hidden; */\n`;\n\nexport const StyledPosterImg = styled.img`\n  width: auto;\n  height: 100%;\n  transform: scale(1);\n  transition: transform 250ms;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const StyledMovieTitleP = styled.p`\n  color: white;\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  StyledMoviesSectionUl,\n  StyledPosterImg,\n  StyledMovieTitleP,\n  StyledMovieWrapper,\n  StyledPosterWrapper,\n} from './MoviesSection.styled';\nimport no_poster_cr from '../../images/no_poster_cr.jpg';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MoviesSection = ({ movies, location }) => {\n  const handleClick = e => {\n    sessionStorage.setItem('scrollPosition', window.scrollY);\n  };\n\n  return (\n    // console.log(location),\n    <StyledMoviesSectionUl>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            onClick={handleClick}\n          >\n            <StyledMovieWrapper>\n              <StyledPosterWrapper>\n                <StyledPosterImg\n                  src={\n                    (movie.poster_path &&\n                      `${IMAGE_BASE_URL}${movie.poster_path}`) ||\n                    no_poster_cr\n                  }\n                  alt={`${movie.original_title}`}\n                />\n              </StyledPosterWrapper>\n              <StyledMovieTitleP>\n                {movie.title ||\n                  movie.name ||\n                  movie.original_name ||\n                  movie.original_title}\n              </StyledMovieTitleP>\n            </StyledMovieWrapper>\n          </Link>\n        </li>\n      ))}\n    </StyledMoviesSectionUl>\n  );\n};\n\nexport default MoviesSection;\n\nMoviesSection.propTypes = {\n  movies: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n};\n"],"names":["StyledTrendingMain","styled","TrendingSectionHeaderH1","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","getMovies","getTrendingMovies","length","scrollPosition","sessionStorage","getItem","window","scrollTo","parseInt","removeItem","handleScrollPosition","MoviesSection","movies","API_KEY","api","axios","baseURL","get","then","response","data","results","console","log","getMovieByID","id","status","getMovieCast","cast","getMovieReviews","searchMovie","query","StyledMoviesSectionUl","StyledMovieWrapper","StyledPosterWrapper","StyledPosterImg","StyledMovieTitleP","handleClick","e","setItem","scrollY","map","movie","to","state","from","onClick","src","poster_path","no_poster_cr","alt","original_title","title","name","original_name"],"sourceRoot":""}