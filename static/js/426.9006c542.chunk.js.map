{"version":3,"file":"static/js/426.9006c542.chunk.js","mappings":"mTAGaA,EAAmBC,EAAAA,EAAAA,KAAH,2GAOhBC,GAAmBD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,gRAgBhBG,EAAqBH,EAAAA,EAAAA,OAAH,6R,SC4D/B,EA3Ee,WACb,OAA4CI,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,OAYjBC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAaK,IAAI,SAGtB,IACE,IAAMC,EAAS,mCAAG,0FAChBR,EADgB,UACQS,EAAAA,EAAAA,IAAYP,GADpB,6EAAH,qDAGfM,GAGD,CAFC,MAAOE,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACR,IAgBJ,OANAI,EAAAA,EAAAA,YAAU,WACsB,IAA1BP,EAAec,QATQ,WAC3B,IAAMC,EAAiBC,eAAeC,QAAQ,kBAC1CF,IACFG,OAAOC,SAAS,EAAGC,SAASL,IAC5BC,eAAeK,WAAW,kBAE7B,CAIGC,EAEH,GAAE,CAACtB,KAGF,UAACN,EAAD,YACE,SAAC,KAAD,CACE6B,cAAe,CAAEC,MAAO,IACxBC,SAAU,SAACC,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBC,YAAW,WA1CO,IAAAJ,KA2CEK,OAAOH,EAAOF,MAAMM,OAAOC,uBArCrD3B,EAF6B,KAAVoB,EAAe,CAAEA,MAAAA,GAAU,CAAC,GAyCvCG,GAAc,EACf,GAAE,IACJ,EARH,SAUG,gBAAGK,EAAH,EAAGA,aAAH,OACC,UAAC,KAAD,YACE,SAACpC,EAAD,CACEqC,KAAK,OACLC,KAAK,QACLC,YAAY,qBAId,SAACrC,EAAD,CAAoBmC,KAAK,SAASG,SAAUJ,EAA5C,sBATH,KAeH,SAACK,EAAA,EAAD,CAAeC,OAAQtC,EAAgBK,SAAUA,MAGtD,C,mMCnFKkC,EAAU,mCAEVC,EAAMC,EAAAA,EAAAA,OAAa,CACvBC,QAAS,iCAIEC,EAAiB,mCAAG,6GAIvBH,EAAIhC,IAAJ,uCAAwC+B,IAAWK,MAAK,SAAAC,GAE5DC,EAAOD,EAASC,KAAKC,OACtB,IAP4B,gCAStBD,GATsB,gCAW7BlC,QAAQC,IAAR,MAX6B,wDAAH,qDAejBmC,EAAY,mCAAG,WAAMC,GAAN,gGAGlBT,EACHhC,IADG,iBAEQyC,EAFR,oBAEsBV,EAFtB,8CAIHK,MAAK,SAAAC,GACJC,EAAOD,CACR,IATqB,gCAWjBC,EAAKA,MAXY,uCAaxBlC,QAAQC,IAAR,MAbwB,kBAcjB,KAAMgC,SAASK,QAdE,yDAAH,sDAkBZC,EAAY,mCAAG,WAAMF,GAAN,gGAGlBT,EACHhC,IADG,iBACWyC,EADX,4BACiCV,EADjC,oBAEHK,MAAK,SAAAC,GAAQ,OAAKC,EAAOD,EAASC,KAAKM,IAA1B,IALQ,gCAOjBN,GAPiB,gCASxBlC,QAAQC,IAAR,MATwB,wDAAH,sDAaZwC,EAAe,mCAAG,WAAMJ,GAAN,gGAGrBT,EACHhC,IADG,iBACWyC,EADX,4BACiCV,EADjC,2BAEHK,MAAK,SAAAC,GACJC,EAAOD,EAASC,KAAKC,OACtB,IAPwB,gCAQpBD,GARoB,gCAW3BlC,QAAQC,IAAR,MAX2B,wDAAH,sDAefH,EAAW,mCAAG,WAAMc,GAAN,gGAGjBgB,EACHhC,IADG,gCAC0B+B,EAD1B,YACqCf,IACxCoB,MAAK,SAAAC,GAAQ,OAAKC,EAAOD,EAASC,KAAKC,OAA1B,IALO,gCAOhBD,GAPgB,gCASvBlC,QAAQC,IAAR,MATuB,wDAAH,qD,kGCnEXyC,EAAwB3D,EAAAA,EAAAA,GAAH,+KAUrB4D,EAAqB5D,EAAAA,EAAAA,IAAH,wGAOlB6D,EAAsB7D,EAAAA,EAAAA,IAAH,4GAOnB8D,EAAkB9D,EAAAA,EAAAA,IAAH,kKAWf+D,EAAoB/D,EAAAA,EAAAA,EAAH,yC,mBCe9B,EAxCsB,SAAC,GAA0B,IAAxB2C,EAAuB,EAAvBA,OAAQjC,EAAe,EAAfA,SACzBsD,EAAc,SAAAC,GAClB5C,eAAe6C,QAAQ,iBAAkB3C,OAAO4C,QACjD,EAED,OAEE,SAACR,EAAD,UACGhB,EAAOyB,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAMf,IACrBiB,MAAO,CAAEC,KAAM9D,GACf+D,QAAST,EAHX,UAKE,UAACJ,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CACEY,IACGL,EAAMM,aAAN,UArBE,mCAqBF,OACqBN,EAAMM,cAC5BC,EAEFC,IAAG,UAAKR,EAAMS,qBAGlB,SAACf,EAAD,UACGM,EAAMU,OACLV,EAAM9B,MACN8B,EAAMW,eACNX,EAAMS,uBArBPT,EAAMf,GADA,KA8BtB,C","sources":["Pages/Movies/Movies.styled.jsx","Pages/Movies/Movies.jsx","api/api.js","components/MoviesSection/MoviesSection.styled.jsx","components/MoviesSection/MoviesSection.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const StyledMoviesMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const StyledInputField = styled(Field)`\n  width: 300px;\n  padding: 0.7em;\n  margin-right: 20px;\n  font-size: 0.9em;\n  outline: none;\n  border-radius: 0.3em;\n  background-color: transparent;\n  border: 1px solid #a0a0a0;\n  color: #fff;\n\n  &:focus {\n    border-color: #fff;\n  }\n`;\n\nexport const StyledSearchButton = styled.button`\n  font-size: 0.9em;\n  padding: 11px 25px;\n  border: none;\n  outline: none;\n  border-radius: 0.3em;\n  /* background-color: #ffb92a; */\n  color: inherit;\n  background-color: #01b4e4;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #90cea1;\n  }\n`;\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { Formik, Form } from 'formik';\nimport { useEffect, useState } from 'react';\nimport { searchMovie } from 'api/api';\nimport MoviesSection from 'components/MoviesSection/MoviesSection';\nimport {\n  StyledMoviesMain,\n  StyledInputField,\n  StyledSearchButton,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [searchedMovies, setSearchedMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n  // const searchedName = searchParams.get('query') ?? '';\n\n  const updateQueryString = query => {\n    if (!query) {\n      return;\n    }\n    const nextParams = query !== '' ? { query } : {};\n    // return nextParams;\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n    try {\n      const getSearch = async () => {\n        setSearchedMovies(await searchMovie(searchParams));\n      };\n      getSearch();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [searchParams]);\n\n  const handleScrollPosition = () => {\n    const scrollPosition = sessionStorage.getItem('scrollPosition');\n    if (scrollPosition) {\n      window.scrollTo(0, parseInt(scrollPosition));\n      sessionStorage.removeItem('scrollPosition');\n    }\n  };\n\n  useEffect(() => {\n    if (searchedMovies.length !== 0) {\n      handleScrollPosition();\n    }\n  }, [searchedMovies]);\n\n  return (\n    <StyledMoviesMain>\n      <Formik\n        initialValues={{ query: '' }}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            updateQueryString(String(values.query.trim().toLocaleLowerCase()));\n            // setSearchParams(updateQueryString().trim().toLocaleLowerCase());\n            setSubmitting(false);\n          }, 200);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <StyledInputField\n              type=\"text\"\n              name=\"query\"\n              placeholder=\"Search movie...\"\n              // value={searchedName}\n              // onChange={e => updateQueryString(e.target.value)}\n            />\n            <StyledSearchButton type=\"submit\" disabled={isSubmitting}>\n              Search\n            </StyledSearchButton>\n          </Form>\n        )}\n      </Formik>\n      <MoviesSection movies={searchedMovies} location={location} />\n    </StyledMoviesMain>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = '2312830e6f848d2a7194ede59058ec48';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  //   timeout: 1000,\n});\n\nexport const getTrendingMovies = async () => {\n  let data;\n  try {\n    //   const trendingMovies = await api\n    await api.get(`/trending/movie/week?api_key=${API_KEY}`).then(response => {\n      // console.log(response.data.results);\n      data = response.data.results;\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByID = async id => {\n  let data;\n  try {\n    await api\n      .get(\n        `/movie/${id}?api_key=${API_KEY}&language=en-US&append_to_response=videos`\n      )\n      .then(response => {\n        data = response;\n      });\n    // console.log(data.data);\n    return data.data;\n  } catch (error) {\n    console.log(error);\n    return error.response.status;\n  }\n};\n\nexport const getMovieCast = async id => {\n  let data;\n  try {\n    await api\n      .get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n      .then(response => (data = response.data.cast));\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  let data;\n  try {\n    await api\n      .get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n      .then(response => {\n        data = response.data.results;\n      });\n    return data;\n    // console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovie = async query => {\n  let data;\n  try {\n    await api\n      .get(`/search/movie?api_key=${API_KEY}&${query}`)\n      .then(response => (data = response.data.results));\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const StyledMoviesSectionUl = styled.ul`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  text-align: center;\n  margin-bottom: 50px;\n`;\n\nexport const StyledMovieWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  max-width: 300px;\n`;\n\nexport const StyledPosterWrapper = styled.div`\n  width: 300px;\n  height: 450px;\n  object-fit: cover;\n  /* overflow: hidden; */\n`;\n\nexport const StyledPosterImg = styled.img`\n  width: auto;\n  height: 100%;\n  transform: scale(1);\n  transition: transform 250ms;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const StyledMovieTitleP = styled.p`\n  color: white;\n`;\n","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  StyledMoviesSectionUl,\n  StyledPosterImg,\n  StyledMovieTitleP,\n  StyledMovieWrapper,\n  StyledPosterWrapper,\n} from './MoviesSection.styled';\nimport no_poster_cr from '../../images/no_poster_cr.jpg';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w300';\n\nconst MoviesSection = ({ movies, location }) => {\n  const handleClick = e => {\n    sessionStorage.setItem('scrollPosition', window.scrollY);\n  };\n\n  return (\n    // console.log(location),\n    <StyledMoviesSectionUl>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link\n            to={`/movies/${movie.id}`}\n            state={{ from: location }}\n            onClick={handleClick}\n          >\n            <StyledMovieWrapper>\n              <StyledPosterWrapper>\n                <StyledPosterImg\n                  src={\n                    (movie.poster_path &&\n                      `${IMAGE_BASE_URL}${movie.poster_path}`) ||\n                    no_poster_cr\n                  }\n                  alt={`${movie.original_title}`}\n                />\n              </StyledPosterWrapper>\n              <StyledMovieTitleP>\n                {movie.title ||\n                  movie.name ||\n                  movie.original_name ||\n                  movie.original_title}\n              </StyledMovieTitleP>\n            </StyledMovieWrapper>\n          </Link>\n        </li>\n      ))}\n    </StyledMoviesSectionUl>\n  );\n};\n\nexport default MoviesSection;\n\nMoviesSection.propTypes = {\n  movies: PropTypes.array.isRequired,\n  location: PropTypes.object.isRequired,\n};\n"],"names":["StyledMoviesMain","styled","StyledInputField","Field","StyledSearchButton","useState","searchedMovies","setSearchedMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","get","getSearch","searchMovie","error","console","log","length","scrollPosition","sessionStorage","getItem","window","scrollTo","parseInt","removeItem","handleScrollPosition","initialValues","query","onSubmit","values","setSubmitting","setTimeout","String","trim","toLocaleLowerCase","isSubmitting","type","name","placeholder","disabled","MoviesSection","movies","API_KEY","api","axios","baseURL","getTrendingMovies","then","response","data","results","getMovieByID","id","status","getMovieCast","cast","getMovieReviews","StyledMoviesSectionUl","StyledMovieWrapper","StyledPosterWrapper","StyledPosterImg","StyledMovieTitleP","handleClick","e","setItem","scrollY","map","movie","to","state","from","onClick","src","poster_path","no_poster_cr","alt","original_title","title","original_name"],"sourceRoot":""}