{"version":3,"file":"static/js/740.208cf0b8.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx","api/api.js"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: #01b4e4;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nconst BackLink = ({ to, children }) => {\n  return (\n    // console.log(to),\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n\nexport default BackLink;\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const StyledMovieCardWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n  max-width: 70%;\n  margin: 0px auto;\n  padding: 20px;\n`;\n\nexport const StyledMovieCardDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: top;\n  justify-content: space-around;\n  gap: 40px;\n  max-width: 70%;\n  margin: 0px auto;\n`;\n\nexport const StyledPosterImg = styled.img`\n  width: 400px;\n  height: 100%;\n  border-radius: 15px;\n`;\n\nexport const StyledInfoDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  /* gap: 18px; */\n`;\n\nexport const StyledTitleH2 = styled.h2`\n  text-align: center;\n  font-size: 2em;\n  font-weight: 700;\n  letter-spacing: 0.06em;\n`;\n\nexport const StyledRatingDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  letter-spacing: 0.06em;\n`;\n\nexport const StyledAdditionalInfoP = styled.p`\n  display: flex;\n  font-size: 0.95em;\n  letter-spacing: 0.06em;\n  gap: 1em;\n  justify-content: center;\n  color: #a0a0a0;\n  margin: 0.6em 0;\n  font-weight: 300;\n`;\n\nexport const StyledGenresUl = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const StyledGenreP = styled.li`\n  border: 1px solid #a0a0a0;\n  font-size: 1em;\n  padding: 0.4em 1.6em;\n  border-radius: 0.4em;\n  font-weight: 300;\n  text-align: center;\n`;\n\nexport const StyledPlotP = styled.p`\n  font-size: 1em;\n  font-weight: 400;\n  line-height: 1.8em;\n  text-align: justify;\n  /* color: #a0a0a0; */\n  color: white;\n`;\n","import { useEffect, useState } from 'react';\nimport {\n  StyledMovieCardDiv,\n  StyledInfoDiv,\n  StyledTitleH2,\n  StyledPosterImg,\n  StyledRatingDiv,\n  StyledAdditionalInfoP,\n  StyledGenresUl,\n  StyledGenreP,\n  StyledPlotP,\n  StyledMovieCardWrapper,\n} from './MovieCard.styled';\nimport { TiStarFullOutline } from 'react-icons/ti';\nimport PropTypes from 'prop-types';\nimport no_poster_cr from '../../images/no_poster_cr.jpg';\n\nconst MovieCard = ({ genres, data }) => {\n  const { title, vote_average, overview, release_date, poster_path, videos } =\n    data;\n  const [trailer, setTrailer] = useState('');\n\n  useEffect(() => {\n    if (!videos || !videos.results.length) {\n      return;\n    }\n    const trailers = videos.results;\n    const trailerId = trailers[trailers.length - 1].key;\n    setTrailer(trailerId);\n  }, [videos]);\n\n  return (\n    // console.log(typeof data),\n    <StyledMovieCardWrapper>\n      <StyledMovieCardDiv>\n        <StyledPosterImg\n          src={\n            (poster_path && `https://image.tmdb.org/t/p/w400${poster_path}`) ||\n            no_poster_cr\n          }\n          alt={title}\n        />\n        <StyledInfoDiv>\n          <StyledTitleH2>{title}</StyledTitleH2>\n          <StyledRatingDiv>\n            <TiStarFullOutline size=\"28\" fill=\"orange\" />\n            <p>{(vote_average * 10).toFixed(2)}%</p>\n          </StyledRatingDiv>\n          <StyledAdditionalInfoP>Release: {release_date}</StyledAdditionalInfoP>\n          <iframe\n            width=\"560\"\n            height=\"315\"\n            src={`https://www.youtube.com/embed/${trailer}`}\n            title=\"YouTube video player\"\n            // frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n            allowFullScreen\n          ></iframe>\n          <h3>Genres</h3>\n          <StyledGenresUl>\n            {genres &&\n              genres.map(genre => (\n                <StyledGenreP key={genre.id}>\n                  <p>{genre.name}</p>\n                </StyledGenreP>\n              ))}\n          </StyledGenresUl>\n        </StyledInfoDiv>\n      </StyledMovieCardDiv>\n      <div>\n        {/* <h3>Plot:</h3> */}\n        <StyledPlotP>{overview}</StyledPlotP>\n      </div>\n    </StyledMovieCardWrapper>\n  );\n};\n\nexport default MovieCard;\n\nMovieCard.propTypes = {\n  genres: PropTypes.array.isRequired,\n  data: PropTypes.object.isRequired,\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledMovieDetailsMain = styled.main`\n  display: flex;\n  flex-direction: column;\n  max-width: 70%;\n  margin: 0px auto 40px;\n  gap: 10px;\n`;\n\nexport const StyledCastRevWrapperUl = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  border: 1px solid #a0a0a0;\n  font-size: 1em;\n  padding: 0.4em 1.6em;\n  border-radius: 0.4em;\n  font-weight: 300;\n  text-align: center;\n  color: inherit;\n  background-color: #1e2428;\n  &:hover {\n    background-color: #5e7464;\n  }\n  &:focus {\n    background-color: #5e7464;\n  }\n`;\n","import { useParams, useLocation, Outlet } from 'react-router-dom';\nimport BackLink from 'components/BackLink/BackLink';\nimport { getMovieByID } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport {\n  StyledNavLink,\n  StyledCastRevWrapperUl,\n  StyledMovieDetailsMain,\n} from './MovieDetails.styled';\nimport { Suspense } from 'react';\nimport { StyledLoadSpinner } from 'utils/LoadSpinner.styled';\nimport { RotatingLines } from 'react-loader-spinner';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [genres, setGenres] = useState([]);\n  const { id } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    try {\n      const getMovie = async () => {\n        setMovie(await getMovieByID(id));\n      };\n      getMovie();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n\n  useEffect(() => {\n    if (!movie.genres) {\n      return;\n    }\n    // console.log(movie.genres);\n    // const movieGenres = movie.genres;\n    // setGenres(movieGenres.map(genre => genre.name)).join(', ')\n    setGenres(movie.genres);\n  }, [movie]);\n\n  // console.log(location);\n  return (\n    <StyledMovieDetailsMain>\n      <BackLink to={backLinkHref}>Back to movies</BackLink>\n      <MovieCard genres={genres} data={movie} />\n      <StyledCastRevWrapperUl>\n        <li>\n          <StyledNavLink\n            to=\"cast\"\n            state={{ from: location.state.from, movieid: id }}\n          >\n            Cast\n          </StyledNavLink>\n        </li>\n        <li>\n          <StyledNavLink\n            to=\"reviews\"\n            state={{ from: location.state.from, movieid: id }}\n          >\n            Reviews\n          </StyledNavLink>\n        </li>\n      </StyledCastRevWrapperUl>\n      <Suspense\n        fallback={\n          <StyledLoadSpinner>\n            <RotatingLines\n              strokeColor=\"grey\"\n              strokeWidth=\"5\"\n              animationDuration=\"0.75\"\n              width=\"96\"\n              visible={true}\n            />\n          </StyledLoadSpinner>\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </StyledMovieDetailsMain>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nconst API_KEY = '2312830e6f848d2a7194ede59058ec48';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  //   timeout: 1000,\n});\n\nexport const getTrendingMovies = async () => {\n  let data;\n  try {\n    //   const trendingMovies = await api\n    await api.get(`/trending/movie/week?api_key=${API_KEY}`).then(response => {\n      // console.log(response.data.results);\n      data = response.data.results;\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByID = async id => {\n  let data;\n  try {\n    await api\n      .get(\n        `/movie/${id}?api_key=${API_KEY}&language=en-US&append_to_response=videos`\n      )\n      .then(response => {\n        data = response;\n      });\n    // console.log(data.data);\n    return data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async id => {\n  let data;\n  try {\n    await api\n      .get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n      .then(response => (data = response.data.cast));\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  let data;\n  try {\n    await api\n      .get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n      .then(response => {\n        data = response.data.results;\n      });\n    return data;\n    // console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovie = async query => {\n  let data;\n  try {\n    await api\n      .get(`/search/movie?api_key=${API_KEY}&${query}`)\n      .then(response => (data = response.data.results));\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["StyledLink","styled","Link","to","children","size","StyledMovieCardWrapper","StyledMovieCardDiv","StyledPosterImg","StyledInfoDiv","StyledTitleH2","StyledRatingDiv","StyledAdditionalInfoP","StyledGenresUl","StyledGenreP","StyledPlotP","genres","data","title","vote_average","overview","release_date","poster_path","videos","useState","trailer","setTrailer","useEffect","results","length","trailers","trailerId","key","src","no_poster_cr","alt","fill","toFixed","width","height","allow","allowFullScreen","map","genre","name","id","StyledMovieDetailsMain","StyledCastRevWrapperUl","StyledNavLink","NavLink","movie","setMovie","setGenres","useParams","location","useLocation","backLinkHref","state","from","getMovie","getMovieByID","error","console","log","movieid","Suspense","fallback","strokeColor","strokeWidth","animationDuration","visible","API_KEY","api","axios","baseURL","getTrendingMovies","get","then","response","getMovieCast","cast","getMovieReviews","searchMovie","query"],"sourceRoot":""}