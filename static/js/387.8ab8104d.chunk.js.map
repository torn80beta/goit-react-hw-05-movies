{"version":3,"file":"static/js/387.8ab8104d.chunk.js","mappings":"mTACMA,EAAU,mCAEVC,EAAMC,EAAAA,EAAAA,OAAa,CACvBC,QAAS,iCAIEC,EAAiB,mCAAG,6GAIvBH,EAAII,IAAJ,uCAAwCL,IAAWM,MAAK,SAAAC,GAE5DC,EAAOD,EAASC,KAAKC,OACtB,IAP4B,gCAStBD,GATsB,gCAW7BE,QAAQC,IAAR,MAX6B,wDAAH,qDAejBC,EAAY,mCAAG,WAAMC,GAAN,gGAGlBZ,EACHI,IADG,iBAEQQ,EAFR,oBAEsBb,EAFtB,8CAIHM,MAAK,SAAAC,GACJC,EAAOD,CACR,IATqB,gCAWjBC,EAAKA,MAXY,gCAaxBE,QAAQC,IAAR,MAbwB,wDAAH,sDAiBZG,EAAY,mCAAG,WAAMD,GAAN,gGAGlBZ,EACHI,IADG,iBACWQ,EADX,4BACiCb,EADjC,oBAEHM,MAAK,SAAAC,GAAQ,OAAKC,EAAOD,EAASC,KAAKO,IAA1B,IALQ,gCAOjBP,GAPiB,gCASxBE,QAAQC,IAAR,MATwB,wDAAH,sDAaZK,EAAe,mCAAG,WAAMH,GAAN,gGAGrBZ,EACHI,IADG,iBACWQ,EADX,4BACiCb,EADjC,2BAEHM,MAAK,SAAAC,GACJC,EAAOD,EAASC,KAAKC,OACtB,IAPwB,gCAQpBD,GARoB,gCAW3BE,QAAQC,IAAR,MAX2B,wDAAH,sDAefM,EAAW,mCAAG,WAAMC,GAAN,gGAGjBjB,EACHI,IADG,gCAC0BL,EAD1B,YACqCkB,IACxCZ,MAAK,SAAAC,GAAQ,OAAKC,EAAOD,EAASC,KAAKC,OAA1B,IALO,gCAOhBD,GAPgB,gCASvBE,QAAQC,IAAR,MATuB,wDAAH,qD,sKClEXQ,EAAkBC,EAAAA,EAAAA,GAAH,mFAMfC,EAAiBD,EAAAA,EAAAA,GAAH,yKASdE,EAA2BF,EAAAA,EAAAA,EAAH,qE,SC8BrC,EAtCgB,WACd,IACMG,GADWC,EAAAA,EAAAA,MACQC,MAAMC,QAC/B,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAMC,EAAU,mCAAG,0FACjBF,EADiB,UACAb,EAAAA,EAAAA,IAAgBO,GADhB,6EAAH,qDAGhBQ,GAGD,CAFC,MAAOC,GACPtB,QAAQC,IAAIqB,EACb,CACF,GAAE,CAACT,KAIF,8BACKK,EAAQK,SACT,SAACX,EAAD,yDAIA,SAACH,EAAD,UACGS,EAAQM,KAAI,SAAAC,GAAM,OACjB,UAACd,EAAD,YACE,wBAAKc,EAAOC,UACZ,uBAAID,EAAOE,cACX,uBAAIF,EAAOG,YAHQH,EAAOtB,GADX,OAW5B,C","sources":["api/api.js","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '2312830e6f848d2a7194ede59058ec48';\n\nconst api = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  //   timeout: 1000,\n});\n\nexport const getTrendingMovies = async () => {\n  let data;\n  try {\n    //   const trendingMovies = await api\n    await api.get(`/trending/movie/week?api_key=${API_KEY}`).then(response => {\n      // console.log(response.data.results);\n      data = response.data.results;\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieByID = async id => {\n  let data;\n  try {\n    await api\n      .get(\n        `/movie/${id}?api_key=${API_KEY}&language=en-US&append_to_response=videos`\n      )\n      .then(response => {\n        data = response;\n      });\n    // console.log(data.data);\n    return data.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCast = async id => {\n  let data;\n  try {\n    await api\n      .get(`/movie/${id}/credits?api_key=${API_KEY}&language=en-US`)\n      .then(response => (data = response.data.cast));\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  let data;\n  try {\n    await api\n      .get(`/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`)\n      .then(response => {\n        data = response.data.results;\n      });\n    return data;\n    // console.log(data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMovie = async query => {\n  let data;\n  try {\n    await api\n      .get(`/search/movie?api_key=${API_KEY}&${query}`)\n      .then(response => (data = response.data.results));\n    // console.log(data);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import styled from '@emotion/styled';\n\nexport const StyledReviewsUl = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 40px;\n`;\n\nexport const StyledReviewLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding-bottom: 20px;\n  border-bottom: 1px solid #a0a0a0;\n  text-align: justify;\n`;\n\nexport const StyledReviewNotification = styled.p`\n  text-align: center;\n  margin: 40px auto;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { getMovieReviews } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport {\n  StyledReviewLi,\n  StyledReviewsUl,\n  StyledReviewNotification,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const location = useLocation();\n  const movieId = location.state.movieid;\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    try {\n      const getReviews = async () => {\n        setReviews(await getMovieReviews(movieId));\n      };\n      getReviews();\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    // console.log(reviews),\n    <section>\n      {(!reviews.length && (\n        <StyledReviewNotification>\n          We don't have any reviews for this movie\n        </StyledReviewNotification>\n      )) || (\n        <StyledReviewsUl>\n          {reviews.map(review => (\n            <StyledReviewLi key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.created_at}</p>\n              <p>{review.content}</p>\n            </StyledReviewLi>\n          ))}\n        </StyledReviewsUl>\n      )}\n    </section>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","api","axios","baseURL","getTrendingMovies","get","then","response","data","results","console","log","getMovieByID","id","getMovieCast","cast","getMovieReviews","searchMovie","query","StyledReviewsUl","styled","StyledReviewLi","StyledReviewNotification","movieId","useLocation","state","movieid","useState","reviews","setReviews","useEffect","getReviews","error","length","map","review","author","created_at","content"],"sourceRoot":""}